buildscript {
  ext {
    springBootVersion = "2.1.5.RELEASE"
  }
  repositories {
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
    classpath "com.diffplug.spotless:spotless-plugin-gradle:3.13.0"
    classpath "de.thetaphi:forbiddenapis:2.5"
    classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:1.6.2"
  }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "com.github.spotbugs"
apply plugin: "jacoco"
apply plugin: "de.thetaphi.forbiddenapis"
apply plugin: "org.springframework.boot"
apply plugin: "com.diffplug.gradle.spotless"
apply plugin: "io.spring.dependency-management"

group = "com.github.wreulicke"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
  mavenCentral()
}

jacocoTestReport {
  reports {
    xml.enabled true
    csv.enabled true
  }
}

test {
  useJUnitPlatform {
    includeEngines 'junit-jupiter', 'junit-vintage'
  }
}

spotless {
  def headerFile = "/** " + project.file("./LICENSE.md").text + "*/"

  java {
    licenseHeader headerFile, "(package|import)"
    eclipse().configFile project.file("eclipse-format-setting.xml")
    trimTrailingWhitespace()
    endWithNewline()
    removeUnusedImports()
  }

  format 'misc', {
    target '*.gradle'

    indentWithSpaces(2)
    endWithNewline()
  }
}


forbiddenApisMain {
  bundledSignatures += [
    'jdk-system-out',
    'jdk-unsafe-' + project.sourceCompatibility,
    'jdk-internal-' + project.sourceCompatibility
  ]
  ignoreFailures = false
}

forbiddenApisTest {
  bundledSignatures += [
    'jdk-system-out',
    'jdk-unsafe-' + project.sourceCompatibility,
    'jdk-internal-' + project.sourceCompatibility
  ]
  ignoreFailures = false
}

spotbugs {
  toolVersion = '3.1.5'
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    xml.enabled = false
    html.enabled = true
  }
}

def defaultEncoding = 'UTF-8'

tasks.withType(AbstractCompile).each {
  it.options.encoding = defaultEncoding
}


bootRun {
  if (project.hasProperty('args')) {
    args project.args.split('\\s+')
  }
}


dependencies {
  compile "org.springframework.boot:spring-boot-starter-actuator"
  compile "org.springframework.boot:spring-boot-starter-web"
  compile "org.springframework.boot:spring-boot-starter-security"
  compile "org.springframework.boot:spring-boot-starter-aop"

  compile "org.springframework.retry:spring-retry"

  compile "org.asynchttpclient:async-http-client:2.5.3"
  compile "org.asynchttpclient:async-http-client-extras-rxjava:2.5.3"

  compile 'io.reactivex.rxjava2:rxjava:2.2.1'
  compile 'com.github.davidmoten:rxjava2-extras:0.1.26'
  compile 'io.github.resilience4j:resilience4j-all:0.15.0'
  compile 'io.github.resilience4j:resilience4j-spring-boot2:0.15.0'
  compile 'io.github.resilience4j:resilience4j-rxjava2:0.15.0'

  compile "org.springframework.cloud:spring-cloud-netflix-concurrency-limits:2.1.0.RELEASE"
  compile 'com.squareup.okhttp3:okhttp:3.12.1'

  compile 'io.vavr:vavr:0.9.2'

  annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

  compile "com.zaxxer:HikariCP:2.7.8"

  compile "com.fasterxml.jackson.module:jackson-module-parameter-names"
  compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
  compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"

  compile "org.zalando:logbook-spring-boot-starter:1.8.1"
  compile "org.zalando:tracer-spring-boot-starter:0.17.0"

  compile "ch.qos.logback.contrib:logback-json-core:0.1.5"
  compile "ch.qos.logback.contrib:logback-json-classic:0.1.5"
  compile "ch.qos.logback.contrib:logback-jackson:0.1.5"

  runtime "org.springframework.boot:spring-boot-devtools"
  compile "mysql:mysql-connector-java"

  testCompile "com.wix:wix-embedded-mysql:4.1.0"
  testCompile "com.github.tomakehurst:wiremock-standalone:2.18.0"

  testCompile "org.springframework.boot:spring-boot-starter-test"
  testCompile "org.springframework.security:spring-security-test"

  testCompile "org.assertj:assertj-core:3.9.0"
  testCompile "org.mockito:mockito-core:2.15.0"

  testCompile "org.junit.jupiter:junit-jupiter-api:5.1.0"
  testRuntime "org.junit.jupiter:junit-jupiter-engine:5.1.0"
  testRuntime "org.junit.vintage:junit-vintage-engine:5.1.0"

}
